version: '3'
services:
  web:
    build:
      context: web
      dockerfile: Dockerfile
    container_name: web
    ports:
      - "8080:8080"
    depends_on:
      - postgres
  postgres:
    image: postgres:14.7
    container_name: postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter:latest
    container_name: postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://user:password@postgres:5432/example?sslmode=disable"
    depends_on:
      - postgres
      - prometheus
    ports:
      - "9187:9187"
  pgcat:
    image: ghcr.io/postgresml/pgcat:latest
    container_name: pgcat
    ports:
      - "6432:6432"
      - "9930:9930"
    volumes:
      - ./pgcat/pgcat.toml:/etc/pgcat/pgcat.toml
    depends_on:
      - prometheus
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: password
    ports:
      - "3001:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboard-settings:/etc/grafana/provisioning/dashboards
      - ./grafana/dashboards:/var/lib/grafana/dashboards
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
  node-exporter:
    image: prom/node-exporter:latest
    container_name: "node-exporter"
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /:/rootfs
    ports:
      - "9100:9100"
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
  master:
    image: locustio/locust
    ports:
     - "8089:8089"
    volumes:
      - ./scenario:/mnt/locust
    command: -f /mnt/locust/locustfile.py --master --host http://web:8080
  worker:
    image: locustio/locust
    volumes:
      - ./scenario:/mnt/locust
    command: -f /mnt/locust/locustfile.py --worker --master-host master
volumes:
  postgres-data:
  grafana-data:

